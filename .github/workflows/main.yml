name: Grab latest Arclight release
on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch:

jobs:
  replace-jar:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      MC_VERSION: "1.20.1"
      TARGET_JAR_FILENAME: "arclight-1.20.1-latest.jar"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Grab latest Arclight release
        run: |
          set -e -o pipefail

          INITIAL_API_URL="https://files.hypoglycemia.icu/v1/files/arclight/minecraft/${{ env.MC_VERSION }}"
          
          MANIFEST_RESPONSE_FILE=$(mktemp)
          curl -sSL -o "$MANIFEST_RESPONSE_FILE" "$INITIAL_API_URL"
          LATEST_SNAPSHOT_MANIFEST_URL=$(jq -r '.files[] | select(.name=="latest-snapshot") | .link' "$MANIFEST_RESPONSE_FILE")
          rm "$MANIFEST_RESPONSE_FILE"
          
          JAR_INFO_RESPONSE_FILE=$(mktemp)
          curl -sSL -o "$JAR_INFO_RESPONSE_FILE" "$LATEST_SNAPSHOT_MANIFEST_URL"
          FINAL_JAR_DOWNLOAD_URL=$(jq -r '.files[0].permlink' "$JAR_INFO_RESPONSE_FILE")
          rm "$JAR_INFO_RESPONSE_FILE"
          
          curl -sSL --fail -o "${{ env.TARGET_JAR_FILENAME }}" "$FINAL_JAR_DOWNLOAD_URL"
          
          echo "INFO: Download complete. ${{ env.TARGET_JAR_FILENAME }} has been replaced/created."

      - name: Commit and Push Changes
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          
          git add "${{ env.TARGET_JAR_FILENAME }}"
          
          if ! git diff --staged --quiet; then
            git commit -m "Update Arclight 1.20.1 JAR"
            git push
          else
            echo "INFO: No actual file changes to commit."
          fi
